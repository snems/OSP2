from PIL import Image, ImageFont, ImageDraw

file_in = "../assets/gfx/2d/m1rage_64.png"
file_out = "../assets/gfx/2d/m1rage_%s.tga"

template_size_x = 1024
template_size_y = 1024
char_size_x = template_size_x / 16
char_size_y = template_size_y / 16

q3_ascii_table = \
"                " \
"                " \
" !\"#$%&'()*+,-./" \
"0123456789:;<=>?" \
"@ABCDEFGHIJKLMNO" \
"PQRSTUVWXYZ[\]^_" \
"`abcdefghijklmno" \
"pqrstuvwxyz{|}~ " \
"                " \
"  012345678     " \
" !\"#$%&'()*+,-./" \
"0123456789:;<=>?" \
"@ABCDEFGHIJKLMNO" \
"PQRSTUVWXYZ[\]^_" \
"'ABCDEFGHIJKLMNO" \
"PQRSTUVWXYZ{|}\" "

q3_config_template_sizes =[]
q3_config_template_sizes =[
[0,0,0,24,16,6,6], [1,64,0,4,56,4,4], [2,128,0,4,56,4,4], [3,192,0,4,56,4,4], [4,256,0,4,56,4,4], [5,320,0,4,56,4,4], [6,384,0,4,56,4,4], [7,448,0,4,56,4,4], [8,512,0,4,56,4,4], [9,576,0,4,56,4,4], [10,640,0,4,56,4,4], [11,704,0,8,48,6,6], [11,768,0,8,48,6,6], [13,832,0,4,52,6,6], [14,896,0,24,16,6,6], [15,960,0,24,16,6,6],
[16,0,64,16,40,6,6], [17,64,64,8,40,6,6], [18,128,64,4,56,4,4], [19,192,64,4,56,4,4], [20,256,64,4,56,4,4], [21,320,64,4,20,6,6], [21,384,64,4,20,6,6], [23,448,64,40,20,6,6], [24,512,64,4,56,4,4], [25,576,64,4,56,4,4], [26,640,64,4,56,4,4], [27,704,64,4,56,4,4], [28,768,64,24,16,6,6], [29,832,64,4,56,4,4], [30,896,64,4,56,4,4], [31,960,64,4,56,4,4],
[32,0,128,16,32,6,6], [33,64,128,3,17,6,6], [34,128,128,2,18,6,6], [35,192,128,6,37,6,6], [36,256,128,2,38,6,6], [37,320,128,2,54,4,4], [38,384,128,3,45,6,6], [39,448,128,2,8,6,6], [40,512,128,4,22,6,6], [41,576,128,3,21,6,6], [42,640,128,7,31,6,6], [43,704,128,2,31,6,6], [44,768,128,4,18,6,6], [45,832,128,2,31,6,6], [46,896,128,4,18,6,6], [47,960,128,0,21,6,6],
[48,0,192,3,42,6,6], [49,64,192,11,18,6,6], [50,128,192,3,40,6,6], [51,192,192,5,40,6,6], [52,256,192,1,45,6,6], [53,320,192,4,41,6,6], [54,384,192,3,41,6,6], [55,448,192,4,40,6,6], [56,512,192,3,41,6,6], [57,576,192,3,41,6,6], [58,640,192,4,18,6,6], [59,704,192,4,18,6,6], [60,768,192,3,30,6,6], [61,832,192,2,31,6,6], [62,896,192,3,31,6,6], [63,960,192,2,37,6,6],
[64,0,256,3,43,6,6], [65,64,256,0,47,6,6], [66,128,256,3,41,6,6], [67,192,256,2,33,6,6], [68,256,256,3,40,6,6], [69,320,256,3,34,6,6], [70,384,256,3,34,6,6], [71,448,256,2,40,6,6], [72,512,256,3,41,6,6], [73,576,256,4,18,6,6], [74,640,256,0,30,6,6], [75,704,256,3,44,6,6], [76,768,256,3,33,6,6], [77,832,256,3,52,6,6], [78,896,256,3,42,6,6], [79,960,256,3,42,6,6],
[80,0,320,3,40,6,6], [81,64,320,2,41,6,6], [82,128,320,3,43,6,6], [83,192,320,3,38,6,6], [84,256,320,1,35,6,6], [85,320,320,3,41,6,6], [86,384,320,0,43,6,6], [87,448,320,0,58,6,5], [88,512,320,0,45,6,6], [89,576,320,0,43,6,6], [90,640,320,0,39,6,6], [91,704,320,4,22,6,6], [92,768,320,0,21,6,6], [93,832,320,4,22,6,6], [94,896,320,1,32,6,6], [95,960,320,0,28,4,4],
[96,0,384,0,19,6,6], [97,64,384,2,38,6,6], [98,128,384,2,38,6,6], [99,192,384,2,31,6,6], [100,256,384,2,38,6,6], [101,320,384,2,37,6,6], [102,384,384,0,30,6,6], [103,448,384,2,38,6,6], [104,512,384,2,38,6,6], [105,576,384,3,17,6,6], [106,640,384,0,27,6,6], [107,704,384,2,40,6,6], [108,768,384,3,17,6,6], [109,832,384,2,54,6,6], [110,896,384,2,38,6,6], [111,960,384,2,38,6,6],
[112,0,448,2,38,6,6], [113,64,448,2,38,6,6], [114,128,448,3,29,6,5], [115,192,448,3,35,6,6], [116,256,448,0,31,6,6], [117,320,448,2,38,6,6], [118,384,448,0,37,6,6], [119,448,448,0,52,6,6], [120,512,448,0,40,6,6], [121,576,448,2,38,6,6], [122,640,448,0,36,6,6], [123,704,448,0,23,6,6], [124,768,448,3,9,6,6], [125,832,448,0,23,6,6], [126,896,448,4,29,6,6], [127,960,448,8,48,6,6],
[128,0,512,8,52,6,6], [129,64,512,4,56,4,4], [130,128,512,4,52,6,6], [131,192,51,16,32,6,6], [132,256,512,6,56,4,4], [133,320,51,24,16,6,6], [134,384,512,6,52,6,6], [135,448,512,6,52,6,6], [136,512,512,8,52,6,6], [137,576,512,4,48,6,6], [137,640,512,4,48,6,6], [139,704,512,8,48,6,6], [139,768,512,8,48,6,6], [141,832,512,4,52,6,6], [142,896,51,24,16,6,6], [143,960,51,24,16,6,6],
[144,0,576,8,48,6,6], [145,64,57,6,8,48,6,6], [146,128,576,3,42,4,4], [147,192,56,11,18,6,6], [148,256,576,3,40,6,6], [149,320,576,5,40,6,6], [150,384,576,1,45,4,4], [151,448,576,4,41,6,6], [152,512,576,3,41,6,6], [153,576,576,4,40,6,6], [154,640,576,3,41,6,6], [155,704,576,2,60,2,2], [156,768,56,24,16,6,6], [157,832,576,2,62,1,1], [158,896,576,0,64,0,0], [159,960,576,0,62,1,1],
[160,0,640,3,17,6,6], [161,64,640,3,17,6,6], [162,128,640,2,18,6,6], [163,192,640,6,37,4,4], [164,256,640,2,38,6,6], [165,320,640,2,54,4,4], [166,384,640,3,45,4,4], [167,448,640,2,8,6,6], [168,512,640,4,22,6,6], [169,576,640,3,21,6,6], [170,640,640,7,31,2,2], [171,704,640,2,31,6,6], [172,768,640,4,18,6,6], [173,832,640,2,31,6,6], [174,896,640,4,18,6,6], [175,960,640,0,21,4,4],
[176,0,704,3,42,4,4], [177,64,704,11,18,6,6], [178,128,704,3,40,6,6], [179,192,704,5,40,6,6], [180,256,704,1,45,4,4], [181,320,704,4,41,6,6], [182,384,704,3,41,6,6], [183,448,704,4,40,6,6], [184,512,704,3,41,6,6], [185,576,704,3,41,6,6], [186,640,704,4,18,6,6], [187,704,704,4,18,6,6], [188,768,704,3,30,6,6], [189,832,704,2,31,6,6], [190,896,704,3,31,6,6], [191,960,704,2,37,6,6],
[192,0,768,3,43,4,4], [193,64,768,0,47,4,4], [194,128,768,3,41,4,4], [195,192,768,2,33,4,4], [196,256,768,3,40,4,4], [197,320,768,3,34,4,4], [198,384,768,3,34,4,4], [199,448,768,2,40,4,4], [200,512,768,3,41,4,4], [201,576,768,4,18,6,6], [202,640,768,0,30,4,4], [203,704,768,3,44,4,4], [204,768,768,3,33,4,4], [205,832,768,3,52,4,4], [206,896,768,3,42,4,4], [207,960,896,3,42,4,4],
[208,0,832,3,40,4,4], [209,64,832,2,41,4,4], [210,128,832,3,43,4,4], [211,192,832,3,38,4,4], [212,256,832,1,35,6,6], [213,320,832,3,41,4,4], [214,384,832,0,43,4,4], [215,448,832,0,58,4,4], [216,512,832,0,45,4,4], [217,576,832,0,43,6,6], [218,640,832,0,39,4,4], [219,704,832,4,22,6,6], [220,768,832,0,21,4,4], [221,832,832,4,22,6,6], [222,896,832,1,32,4,4], [223,960,832,0,28,2,2],
[224,0,896,2,8,6,6], [225,64,896,0,47,4,4], [226,128,896,3,41,4,4], [227,192,896,2,33,4,4], [228,256,896,3,40,4,4], [229,320,896,3,34,4,4], [230,384,896,3,34,4,4], [231,448,896,2,40,4,4], [232,512,896,3,41,4,4], [233,576,896,4,18,6,6], [234,640,896,0,30,6,6], [235,704,896,3,44,4,4], [236,768,896,3,33,4,4], [237,832,896,3,52,4,4], [238,896,896,3,42,4,4], [239,960,896,3,42,4,4],
[240,0,960,3,40,4,4], [241,64,960,2,41,4,4], [242,128,960,3,43,4,4], [243,192,960,3,38,4,4], [244,256,960,1,35,4,4], [245,320,960,3,41,4,4], [246,384,960,0,43,4,4], [247,448,960,0,58,2,3], [248,512,960,0,45,4,4], [249,576,960,0,43,4,4], [250,640,960,0,39,6,6], [251,704,960,0,23,6,6], [252,768,960,3,9,6,6], [253,832,960,0,23,6,6], [254,896,960,2,18,6,6], [255,960,960,8,48,6,6] ] 



def isCharColumEmpty(image, x, y):
    level = 64
    i = 0
    result = True
    for i in range(int(char_size_y)):
        r, g, b = image.getpixel((int(x), int(y + i)))
        if (r > level or g > level or b > level):
            result = False
            break

    return result


image = Image.open(file_in) 
imageRGB = image.convert('RGB')

print("// img <font image> <threshold>, up to 4 entries allowed")
print("img \"gfx/2d/m1rage_64.tga\" 48")
print("img \"gfx/2d/m1rage_32.tga\" 22")
print("img \"gfx/2d/m1rage_16.tga\" 0")
print("// fnt <width> <height> <char width> <char height>")
print("fnt 1024 1024 64 64")
print("// <ch> <x0> <y0> <x1> <w> <s1> <s2>")

x = 0
y = 0
i = 0
x_offset = 4
y_offset = 0

for char in q3_ascii_table:

    for begin in range(0, int(char_size_x)):
        if (not isCharColumEmpty(imageRGB, x + begin, y)):
           break;

    for end in range(begin, int(char_size_x)):
        if (isCharColumEmpty(imageRGB, x + end, y)):
           break;

    width = end - begin 
    if (width <= 0):
        begin = q3_config_template_sizes[i][3]
        width = q3_config_template_sizes[i][4]

    print(i, int(x), int(y), begin, width, q3_config_template_sizes[i][5], q3_config_template_sizes[i][6], "//", char)

    i = i + 1
    x = x + char_size_x
    if x == template_size_x:
        x = 0
        y = y + char_size_y


image.save(file_out % "64", "TGA")

image32 = image.resize((512, 512))
image32.save(file_out % "32", "TGA")

image16 = image.resize((256, 256))
image16.save(file_out % "16", "TGA")

